amco = read.csv("C:\\Users\\a_car\\OneDrive\\Documents\\GitHub\\AmeriCorps-Volunteers\\AmeriCorps_Participant_Demographics_Data.csv")
amco = read.csv("C:\\Users\\a_car\\OneDrive\\Documents\\GitHub\\AmeriCorps-Volunteers\\AmeriCorps_Participant_Demographics_Data.csv")
amco = read.csv("/Users/rachelthomas/Desktop/DATS6101/Americorps Project/AmeriCorps-Volunteers/AmeriCorps_Participant_Demographics_Data.csv")
library(dplyr)
library(ggplot2)
#takes only the Race dem_cat
dem_cat_subset <- 'Race'
amco_race <- amco %>%
filter(dem_cat == dem_cat_subset)
str(amco_race)
summary(amco_race)
#takes only 2022
time_period_subset <- '2022'
amco_race_2022 <- amco_race %>%
filter(time_period == time_period_subset)
amco_r2022_noALL <- amco_race_2022 %>%
filter(!program_office %in% c("All AmeriCorps Members", "AmeriCorps Member Programs (no NCCC)", "AmeriCorps Seniors (All)"))
print(amco_r2022_noALL)
amco_r2022_noNW <- amco_r2022_noALL %>%
filter(!dem_group %in% c("Racially Diverse (Non-White)"))
print(amco_r2022_noNW)
View(amco_r2022_noNW)
race_breakdown <- amco_race_2022 %>%
group_by(program_office, dem_group) %>%
summarise(count = n()) %>%
arrange(program_office, dem_group)
View(race_breakdown)
program_MSY <- amco_r2022_noNW %>%
group_by(program_office) %>%
summarise (total_dem_group = sum(count_dem_group))
print(program_MSY)
race_program <- aggregate(count_dem_group ~ program_office + dem_group, data = amco_r2022_noNW, sum)
print(race_program)
group_MSY <- aggregate(count_dem_group ~ dem_group, data = amco_r2022_noNW, sum)
total_MSY <- sum(group_MSY$count_dem_group)
group_MSY$percentage <- (group_MSY$count_dem_group / total_MSY) * 100
print(group_MSY)
View(amco_race_2022)
str(amco_race)
dem_cat_subset
unique(amco_race$dem_cat)
nique(amco_race$geography)
unique(amco_race$geography)
unique(amco_r2022_noNW$dem_cat)
uniequ(amco_r2022_noNW$geography)
unique(amco_r2022_noNW$geography)
state <- amco_r2022_noNW %>%
filter(geography == "State")
print(state)
region <- amco_r2022_noNW %>%
filter(geography == "Region")
print(region)
national <- amco_r2022_noNW %>%
filter(geography == "National")
print(national)
unique(state$program_office)
unique(state$dem_group)
unique(state$geography)
View(state)
View(region)
View(state)
View(national)
program_MSY_state <- state %>%
group_by(program_office) %>%
summarise (total_dem_group = sum(count_dem_group))
print(program_MSY_state)
View(program_MSY_state)
race_program_sum <- aggregate(count_dem_group ~ program_office + dem_group, data = state, sum)
print(race_program_sum)
View(race_program_sum)
race_program_statw <- aggregate(count_dem_group ~ program_office + dem_group, data = state, sum)
print(race_program_state)
race_program_state <- aggregate(count_dem_group ~ program_office + dem_group, data = state, sum)
print(race_program_state)
View(race_program_statw)
group_MSY_state <- aggregate(count_dem_group ~ dem_group, data = state, sum)
total_MSY_state <- sum(group_MSY_state$count_dem_group)
group_MSY_state$percentage <- (group_MSY_state$count_dem_group / total_MSY_state) * 100
print(group_MSY_state)
View(group_MSY)
program_MSY_region <- region %>%
group_by(program_office) %>%
summarise (total_dem_group = sum(count_dem_group))
print(program_MSY_region)
race_program_region <- aggregate(count_dem_group ~ program_office + dem_group, data = region, sum)
print(race_program_region)
group_MSY_region <- aggregate(count_dem_group ~ dem_group, data = region, sum)
total_MSY_region <- sum(group_MSY_region$count_dem_group)
group_MSY_region$percentage <- (group_MSY_region$count_dem_group / total_MSY_region) * 100
print(group_MSY_region)
program_MSY_national <- national %>%
group_by(program_office) %>%
summarise (total_dem_group = sum(count_dem_group))
print(program_MSY_national)
race_program_national <- aggregate(count_dem_group ~ program_office + dem_group, data = national, sum)
print(race_program_national)
group_MSY_national <- aggregate(count_dem_group ~ dem_group, data = national, sum)
total_MSY_national <- sum(group_MSY_national$count_dem_group)
group_MSY_national$percentage <- (group_MSY_national$count_dem_group / total_MSY_national) * 100
print(group_MSY_national)
